# pod-create-playbook.yml
---
- name: Check for Init done events
  hosts: localhost
  gather_facts: false
  tasks:
#    - name: Print event
#      debug:
#        msg: "{{ ev }}"
#    - debug:
#        msg: |-
#          Looping through ev['resources']['items'] and printing each resource
#          {{ r }}
#      loop: "{{ ev['resources']['items'] }}"
#      vars:
#        r: "{{ item }}"

    - name: Extract individual resources from ev
      set_fact:
        individual_resources: "{{ ev.resources['items'] }}"

    - name: Debug - Show all resources
      debug:
        var: individual_resources

    - name: Filter resources where metadata label type is 'eda'
      set_fact:
        filtered_resources_without_ev: "{{ individual_resources | selectattr('metadata.labels', 'defined') | selectattr('metadata.labels.type', 'defined') | selectattr('metadata.labels.type', 'eq', 'eda') | list }}"

    - name: Restructure resources with event.resource hierarchy
      set_fact:
        restructured_resources: "{{ filtered_resources_without_ev | map('to_json') | list | json_query('[*].{event: {resource: @}}') }}"

    - name: Debug - Show restructured resources
      debug:
        var: restructured_resources

    - name: Filter resources where metadata label type is 'eda' and add prefix hierarchy
      set_fact:
        filtered_resources: >-
          {{
            individual_resources 
            | selectattr('metadata.labels', 'defined') 
            | selectattr('metadata.labels.type', 'defined') 
            | selectattr('metadata.labels.type', 'eq', 'eda') 
            | map('ansible.builtin.combine', {'event': {'type': 'ADDED', 'resource': {}}})
            | map('ansible.builtin.combine', {'event': {'resource': '{{ item }}'}}, recursive=true)
            | list
          }}

#    - name: Filter resources where metadata label type is 'eda'
#      set_fact:
      #  filtered_resources: "{{ individual_resources | selectattr('metadata.labels', 'defined') | selectattr('metadata.labels.type', 'defined') | selectattr('metadata.labels.type', 'eq', 'eda') | list }}"
#        filtered_resources: "{{ individual_resources | selectattr('metadata.labels', 'defined') | selectattr('metadata.labels.type', 'defined') | selectattr('metadata.labels.type', 'eq', 'eda') | map('community.general.dict_merge', {'event': {'type': 'ADDED', 'resource': {}}}) | list }}"

    - name: Debug - Show filtered resources
      debug:
        var: filtered_resources

    - name: Extract the annotations of the filtered resources
      set_fact:
        filtered_resource_annotations: "{{ restructured_resources | map(attribute='event.resource.metadata.annotations') | list }}"

    - name: Call k8s_create_virtual_network role for each filtered resource
      include_role:
        name: k8s_create_virtual_network
      vars:
        ns: "{{ item.metadata.name }}"
        annotate: "{{ item.metadata.annotations }}"
        ev: "{{ item }}"
      loop: "{{ filtered_resources }}"

    